@import "./base.css";

#app {
  font-weight: normal;
}

a,
button {
  text-decoration: none;
  transition: 0.3s ease-in-out;
  cursor: pointer;
}

ul {
  padding: 0;
  margin: 0;
}

li {
  list-style-type: none;
}

/******______ ANIMATIONS ______******/
/* Make content appear */
.scrollShow {
  animation: scrollShowAnimation both;
  animation-timeline: view(70% 5%);
}
@keyframes scrollShowAnimation {
  from {
    opacity: 0;
    transform: translateY(200px) scale(0.3);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Go from grey to color & round-border */
.scrollColorRound {
  animation: scrollColorRoundAnimation both;
  animation-timeline: view(70% 5%);
}
@keyframes scrollColorRoundAnimation {
  from {
    filter: grayscale(1);
    border-radius: var(--radius);
  }
  to {
    filter: grayscale(0);
    border-radius: 150px;
  }
}

/* Grow content */
.scrollGrow {
  animation: scrollGrowAnimation both;
  animation-timeline: view(70% 5%);
}
@keyframes scrollGrowAnimation {
  from {
    transform: scale(0.8);
  }
  to {
    transform: scale(1);
  }
}

/* Go from blur to focus */
.scrollBlurToFocus {
  animation: scrollBlurToFocusAnimation both;
  animation-timeline: view(70% 5%);
}
@keyframes scrollBlurToFocusAnimation {
  from {
    opacity: 0;
    filter: blur(3px);
  }
  to {
    opacity: 1;
    filter: blur(0px);
  }
}

/* Go back to original color */
.scrollColorRewind {
  animation: scrollColorRewindAnimation both;
  animation-timeline: view(70% 5%);
}
@keyframes scrollColorRewindAnimation {
  from {
    filter: hue-rotate(50deg);
    /* Rouge → Jaune → Vert → Cyan → Bleu → Magenta → Rouge. */
  }
  to {
    filter: hue-rotate(0deg);
  }
}

/* Clip part of the content */
.scrollClipSM {
  animation: scrollClipSMAnimation both;
  animation-timeline: view(70% 5%);
}
@keyframes scrollClipSMAnimation {
  from {
    clip-path: circle(100% at 50% 78%);
    /* découpe l’image en forme de cercle. 100% indique que le cercle est très grand; at : Où placer le cercle? On dit où le centre du cercle sera placé. 	•	50% = au milieu horizontalement (de gauche à droite),	85% = en bas, à 85% de la hauteur de l’image*/
  }
  to {
    clip-path: circle(100% at 50% 85%);
  }
}
.scrollClipMD {
  animation: scrollClipMDAnimation both;
  animation-timeline: view(70% 5%);
}
@keyframes scrollClipMDAnimation {
  from {
    clip-path: circle(90% at 50% 73%);
  }
  to {
    clip-path: circle(90% at 50% 85%);
  }
}
.scrollClipLG {
  animation: scrollClipLGAnimation both;
  animation-timeline: view(70% 5%);
}
@keyframes scrollClipLGAnimation {
  from {
    clip-path: circle(100% at 50% 100%);
  }
  to {
    clip-path: circle(100% at 50% 160%);
  }
}

/* Move part of the content */
.scrollSlideRight {
  animation: scrollSlideRightAnimation both;
  animation-timeline: view(80% 5%);
}
@keyframes scrollSlideRightAnimation {
  from {
    transform: translateX(-200px);
  }
  to {
    transform: translateX(0);
  }
}
.scrollSlideLeft {
  animation: scrollSlideLeftAnimation both;
  animation-timeline: view(80% 5%);
}
@keyframes scrollSlideLeftAnimation {
  from {
    transform: translateX(200px);
  }
  to {
    transform: translateX(0);
  }
}
.scrollSlideUp {
  animation: scrollSlideUpYAnimation both;
  animation-timeline: view(80% 5%);
}
@keyframes scrollSlideUpYAnimation {
  from {
    transform: translateY(200px);
  }
  to {
    transform: translateX(0);
  }
}

@supports not (animation-timeline: view()) {
  /* remove the animations */
  .scrollShow,
  .scrollColorRound,
  .scrollGrow,
  .scrollBlurToFocus,
  .scrollColorRewind,
  .scrollClipSM,
  .scrollClipMD,
  .scrollClipLG,
  .scrollSlideRight,
  .scrollSlideLeft,
  .scrollSlideUp {
    animation: none;
  }
  .scrollClipSM {
    clip-path: circle(100% at 50% 85%);
  }
  .scrollClipMD {
    clip-path: circle(90% at 50% 85%);
  }
  .scrollClipLG {
    clip-path: circle(100% at 50% 160%);
  }
  #artist-crafting-worlds #artist {
    border-radius: 150px;
  }

  /****** Animation for Safari & other non-supported browsers ******/
  .transition-section {
    opacity: 0;
    transform: translateY(250px);
    transition: all 0.9s ease-in-out;
  }
  .transition-section.visible {
    opacity: 1;
    transform: translateY(0);
  }
}
